{"version":3,"sources":["Others/Cities.js","components/Formulario.js","components/Reserva.js","App.js","reportWebVitals.js","index.js"],"names":["provincia","Formulario","crearReserva","useState","fechaEntrada","fechaSalida","adultos","niños","reserva","actualizarReserva","error","actualizarError","actualizarState","e","target","name","value","today","Date","getTime","getTimezoneOffset","toISOString","split","data-testid","className","onSubmit","preventDefault","length","trim","id","uuid","console","log","action","htmlFor","Autocomplete","options","ciudades","getOptionLabel","option","onChange","event","renderInput","params","TextField","label","variant","type","min","Row","Col","Reserva","eliminarReserva","onClick","App","ReservasIniciales","JSON","parse","localStorage","getItem","reservas","guardarReservas","useEffect","setItem","stringify","nuevasReservas","filter","titulo","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2117926.chunk.js","sourcesContent":["// Provincias españolas\nexport default [\n  { provincia: \"Álava\" },\n  { provincia: \"Albacete\" },\n  { provincia: \"Alicante\" },\n  { provincia: \"Almería\" },\n  { provincia: \"Asturias\" },\n  { provincia: \"Ávila\" },\n  { provincia: \"Badajoz\" },\n  { provincia: \"Barcelona\" },\n  { provincia: \"Burgos\" },\n  { provincia: \"Cáceres\" },\n  { provincia: \"Cádiz\" },\n  { provincia: \"Cantabria\" },\n  { provincia: \"Castellón\" },\n  { provincia: \"Ciudad Real\" },\n  { provincia: \"Córdoba\" },\n  { provincia: \"La Coruña\" },\n  { provincia: \"Cuenca\" },\n  { provincia: \"Gerona\" },\n  { provincia: \"Granada\" },\n  { provincia: \"Guadalajara\" },\n  { provincia: \"Guipúzcoa\" },\n  { provincia: \"Huelva\" },\n  { provincia: \"Huesca\" },\n  { provincia: \"Islas Baleares\" },\n  { provincia: \"Jaén\" },\n  { provincia: \"León\" },\n  { provincia: \"Lérida\" },\n  { provincia: \"Lugo\" },\n  { provincia: \"Madrid\" },\n  { provincia: \"Málaga\" },\n  { provincia: \"Murcia\" },\n  { provincia: \"Navarra\" },\n  { provincia: \"Orense\" },\n  { provincia: \"Palencia\" },\n  { provincia: \"Las Palmas\" },\n  { provincia: \"Pontevedra\" },\n  { provincia: \"La Rioja\" },\n  { provincia: \"Salamanca\" },\n  { provincia: \"Segovia\" },\n  { provincia: \"Sevilla\" },\n  { provincia: \"Soria\" },\n  { provincia: \"Tarragona\" },\n  { provincia: \"Santa Cruz de Tenerife\" },\n  { provincia: \"Teruel\" },\n  { provincia: \"Toledo\" },\n  { provincia: \"Valencia\" },\n  { provincia: \"Valladolid\" },\n  { provincia: \"Vizcaya\" },\n  { provincia: \"Zamora\" },\n  { provincia: \"Zaragoza\" },\n];\n","import React, { Fragment, useState } from \"react\";\nimport { uuid } from \"uuidv4\";\nimport PropTypes from \"prop-types\";\nimport { Row, Col } from \"react-bootstrap\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport ciudades from \"../Others/Cities\";\n\nexport const Formulario = ({ crearReserva }) => {\n  // Guardo la provincia escogida y reservo los otros\n  // datos si es que han sido introducidos\n  // Si el value no es null, guardo los cambios\n  const handleChange = (event, value) =>\n    value\n      ? actualizarReserva({\n          ...reserva,\n          provincia: value.provincia,\n        })\n      : null;\n\n  // Crear State de Reservas\n  const [reserva, actualizarReserva] = useState({\n    provincia: \"\",\n    fechaEntrada: \"\",\n    fechaSalida: \"\",\n    adultos: 1,\n    niños: 0,\n  });\n\n  const [error, actualizarError] = useState(false);\n\n  //   Función que se ejecuta cada vez que el usuario escribe en el input\n  const actualizarState = (e) =>\n    actualizarReserva({\n      ...reserva,\n      [e.target.name]: e.target.value,\n    });\n\n  // Extraer valores\n  const { provincia, fechaEntrada, fechaSalida, adultos, niños } = reserva;\n\n  // Encontrar el dia de hoy\n  const today = new Date(\n    new Date().getTime() - new Date().getTimezoneOffset() * 60000\n  )\n    .toISOString()\n    .split(\"T\")[0];\n\n  //Cuando el usuario presiona \"Agregar Reserva\"\n  const submitReserva = (e) => {\n    e.preventDefault();\n\n    //   Validar\n    if (\n      provincia.length === 0 ||\n      fechaEntrada.trim() === \"\" ||\n      fechaSalida.trim() === \"\"\n    ) {\n      actualizarError(true);\n      return;\n    }\n\n    // Eliminarel mensaje previo\n    actualizarError(false);\n\n    //   Asignar iD\n    reserva.id = uuid();\n    console.log(reserva);\n\n    // Crear Reserva\n    crearReserva(reserva);\n\n    // Reiniciar el form\n    actualizarReserva({\n      // provincia: \"\",\n      fechaEntrada: \"\",\n      fechaSalida: \"\",\n      adultos: 1,\n      niños: 0,\n    });\n  };\n\n  return (\n    <Fragment>\n      <h2 data-testid=\"titulo\">Crear reserva</h2>\n      {error ? (\n        <p data-testid=\"alerta\" className=\"alerta-error\">\n          Todos los campos son obligatorios\n        </p>\n      ) : null}\n      <form onSubmit={submitReserva} action=\"\">\n        <label htmlFor=\"\">Destino de tu viaje</label>\n        <Autocomplete\n          id=\"combo-box-demo\"\n          options={ciudades}\n          getOptionLabel={(option) => option.provincia}\n          onChange={handleChange}\n          renderInput={(params) => (\n            <TextField {...params} label=\"¿A dónde vas?\" variant=\"outlined\" />\n          )}\n        />\n\n        <label htmlFor=\"\">Fecha Entrada</label>\n        <input\n          data-testid=\"fechaEntrada\"\n          type=\"date\"\n          name=\"fechaEntrada\"\n          min={today}\n          className=\"u-full-width\"\n          onChange={actualizarState}\n          value={fechaEntrada}\n        />\n        <label htmlFor=\"\">Fecha Salida</label>\n        <input\n          data-testid=\"fechaSalida\"\n          type=\"date\"\n          name=\"fechaSalida\"\n          min={fechaEntrada}\n          className=\"u-full-width\"\n          onChange={actualizarState}\n          value={fechaSalida}\n        />\n        <Row>\n          <Col>\n            <label htmlFor=\"\">Adultos</label>\n            <input\n              data-testid=\"adultos\"\n              type=\"number\"\n              name=\"adultos\"\n              min=\"1\"\n              className=\"u-full-width\"\n              onChange={actualizarState}\n              value={adultos}\n            />\n          </Col>\n          <Col>\n            <label htmlFor=\"\">Niños</label>\n            <input\n              data-testid=\"niños\"\n              type=\"number\"\n              name=\"niños\"\n              min=\"0\"\n              className=\"u-full-width\"\n              onChange={actualizarState}\n              value={niños}\n            />\n          </Col>\n        </Row>\n\n        <button\n          data-testid=\"btn-submit\"\n          type=\"submit\"\n          className=\"u-full-width button-primary\"\n        >\n          Agregar Reserva\n        </button>\n      </form>\n    </Fragment>\n  );\n};\n\nFormulario.propTypes = {\n  crearReserva: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Reserva = ({ reserva, eliminarReserva }) => (\n  <div data-testid=\"reserva\" className=\"cita\">\n    <p>\n      Destino: <span>{reserva.provincia}</span>\n    </p>\n    <p>\n      Fecha Entrada: <span>{reserva.fechaEntrada}</span>\n    </p>\n    <p>\n      Fecha Salida: <span>{reserva.fechaSalida}</span>\n    </p>\n    <p>\n      Adultos: <span>{reserva.adultos}</span>\n    </p>\n    <p>\n      Niños: <span>{reserva.niños}</span>\n    </p>\n    <button\n      data-testid=\"btn-eliminar\"\n      className=\"button eliminar u-full-width\"\n      onClick={() => eliminarReserva(reserva.id)}\n    >\n      Eliminar &times;\n    </button>\n  </div>\n);\n\nReserva.propTypes = {\n  reserva: PropTypes.object.isRequired,\n  eliminarReserva: PropTypes.func.isRequired,\n};\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport { Formulario } from \"./components/Formulario\";\nimport { Reserva } from \"./components/Reserva\";\n\nfunction App() {\n  // reservas en el localStorage\n  let ReservasIniciales = JSON.parse(localStorage.getItem(\"reservas\"));\n  if (!ReservasIniciales) {\n    ReservasIniciales = [];\n  }\n  //  Arreglo de reservas\n  const [reservas, guardarReservas] = useState(ReservasIniciales);\n\n  //  UseEffect para realizar ciertas operaciones cuando el satte cambia\n  useEffect(() => {\n    if (ReservasIniciales) {\n      localStorage.setItem(\"reservas\", JSON.stringify(reservas));\n    } else {\n      localStorage.setItem(\"reservas\", JSON.stringify([]));\n    }\n  }, [reservas, ReservasIniciales]);\n\n  // Función que tome las reservas actuales y agregue la nueva\n  const crearReserva = (reserva) => {\n    guardarReservas([...reservas, reserva]);\n  };\n\n  // Función que elimina una cita por su id\n  const eliminarReserva = (id) => {\n    const nuevasReservas = reservas.filter((reserva) => reserva.id !== id);\n    guardarReservas(nuevasReservas);\n  };\n\n  // console.log(destinoViaje);\n\n  // Mensaje condicional\n  const titulo =\n    reservas.length === 0 ? \"No hay reservas\" : \"Administra tus reservas\";\n\n  const punto = \".\";\n  return (\n    <Fragment>\n      <h1 data-testid=\"nombre-app\">Administrador de Reserva Hotel</h1>;\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"five columns\">\n            <Formulario crearReserva={crearReserva} />\n          </div>\n          <div className=\"two columns\">{punto}</div>\n          <div className=\"five columns\">\n            <h2 data-testid=\"titulo-dinamico\">{titulo}</h2>\n            {reservas.map((reserva) => (\n              <Reserva\n                key={reserva.id}\n                reserva={reserva}\n                eliminarReserva={eliminarReserva}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}